
#user  nobody;
worker_processes  1;

# error_log  logs/error.log;
# error_log  logs/error.log  notice;
# error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    include       conf.d/*.conf;
    default_type  application/octet-stream;

    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" "$request_uri" ';

    sendfile        on;
    tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    server {
        listen       80;
        listen       [::]:80;
        server_name  localhost;

        # 转发
        # redirect all http requests to https with a 301 moved permanently response
        # return 301 https://$host$request_uri;

        # rewrite ^(.*)$ https://$host$1 permanent;

        #charset koi8-r;
        
        location / {
            root   html;
            # root f:/meijie/lmj01.github.io;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;
        error_page  404              /50.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # upstream lmj01_upstream {
    #     server 127.0.0.1:9940 fail_timeout=0;
    # }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    server {
        listen       443 ssl http2 default_server;
        listen       [::]:443 ssl http2 default_server;
        server_name  localhost;

        ssl_certificate      cert/localhost.crt;
        ssl_certificate_key  cert/localhost.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        # for SharedArrayBuffer
        add_header Cross-Origin-Embedder-Policy require-corp;
		add_header Cross-Origin-Opener-Policy same-origin;

        add_header Strict-Transport-Security "max-age=63072000" always;  # HSTS策略
        # add_header X-Frame-Options DENY;          # 减少点击劫持
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;         #禁止服务器自动解析资源类型
        add_header X-Xss-Protection 1;                #防XSS攻击

        # 请求路径
        # if ($request_uri ~ "/lmj01"){
        #     # 重定向
        #     return 301 http://127.0.0.1:9940/;
        # }        

        # OCSP stapling
        # ssl_stapling on;
        # ssl_stapling_verify on;

        # error_page  404              /404.html;
        error_page  404              /50.html;

        # redirect server error pages to the static page /50x.html
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
           root   html;
        }

        # 不需要搞那么复杂，实际部署中也不需要，开发中就临时更改就可以拉，又不是并行的
        location / {

            # root	f:/meijie/lmj01.github.io;
            root    f:/fullstack/mjdemo;
		    autoindex on;
        }
        
        # 反向代理
        # 前缀匹配
        location ^~ /lmj01 {
            
            return 301 http://127.0.0.1:9940/;

            # 后面有/表示绝对路径， 没有/表示相对路径
            # 这里使用绝对路径，请求转发
            # proxy_pass  http://127.0.0.1:9940/;
            # proxy_pass  http://lmj01_upstream/;

            proxy_redirect off;
            proxy_set_header Host $proxy_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_max_temp_file_size 0;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            proxy_buffer_size 4k;
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;
        }
    }
}
